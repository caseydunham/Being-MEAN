extends layout

block content
  h1 AngularJS Cross Site Scripting
  //- TODO: Add context for this vulnerability. Include the following link:
  //- http://blog.portswigger.net/2016/01/xss-without-html-client-side-template.html
  p.
    AngularJS is an extremely popular JavaScript Framework which has
    historically exposed websites to a form of attack known as Angular
    Template Injection. The following form is vulnerable to an AngularJS
    Sandbox Escape; exploit the form to trigger a Reflected XSS.
    Please note that
    #[a(href="http://blog.portswigger.net/2016/01/xss-without-html-client-side-template.html") Portswigger]
    has done an excellent write-up on how to abuse AngularJS sandbox escapes
    for total pwnage of a site via Cross Site Scripting; this write-up will
    help you understand how the below exploit code functions.
  h2 Goals
  ol
    li Create an XSS payload by bypassing the AngularJS Sandbox
  div
    form(name="search", method="get")
          div.input
              input(type="text", name="query", placeholder="Search...")
          div.actions
              input(type="submit", value="Go")

  //- ng-app required for the AngularJS Sandbox Escape working
  div(ng-app="app")
    if query
      p You searched for #{query}

  //- any time this AngularJS is imported, this vulnerability is possible
  script(src='https://code.angularjs.org/1.5.8/angular.min.js')
  script.
      (function() {
        'use strict';
        angular.module('app', []);
      })();

  p
    //- TODO: Figure out how to properly reroute to index
    a(href="http://localhost:3000") Return to Index
